<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
	<context:annotation-config />
	<context:component-scan base-package="com.metacube.ipathshala.manager" />
	<context:component-scan base-package="com.metacube.ipathshala.service" />
	<context:component-scan base-package="com.metacube.ipathshala.entity.metadata" />
	<context:component-scan base-package="com.metacube.ipathshala.core" />
	<context:component-scan base-package="com.metacube.ipathshala.dataupload" />
	<context:component-scan
		base-package="com.metacube.ipathshala.dataupload.entityprocessor" />
	<context:component-scan base-package="com.metacube.ipathshala.cache" />

	<bean name="googleMailService" class="com.metacube.ipathshala.mail.impl.GoogleMailService">
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>

	<bean name="templateServiceImpl"
		class="com.metacube.ipathshala.service.template.impl.TemplateServiceImpl">
		<property name="velocityEngine" ref="velocityEngine" />
	</bean>

	<bean id="velocityEngine"
		class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
		<property name="velocityProperties">
			<value>
				resource.loader=class
				class.resource.loader.class=org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader
			</value>
		</property>
	</bean>

	<bean
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:ipathshala.properties" />
	</bean>

	<bean name="googleDomainService" id="googleDomainService"
		class="com.metacube.ipathshala.service.GoogleDomainService"
		init-method="init">
		<property name="domainName" value="${google.app.domain}" />
		<property name="domainAdminEmail" value="${google.app.domain.admin}" />
		<property name="domainAdminPassword" value="${google.app.domain.admin.passwd}" />
	</bean>

	<bean name="appCacheConfig" id="appCacheConfig"
		class="com.metacube.ipathshala.cache.AppCacheConfig">
		<property name="keyCache" ref="keyCache" />
		<property name="entityCacheMap">
			<map>
				<entry>
					<key>
						<value>Student</value>
					</key>
					<ref bean="studentCache" />
				</entry>
				<entry>
					<key>
						<value>Parent</value>
					</key>
					<ref bean="parentCache" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="studentCache" class="com.metacube.ipathshala.cache.impl.StudentCache">
		<constructor-arg value="Student" />
	</bean>
	<bean id="parentCache" class="com.metacube.ipathshala.cache.impl.ParentCache">
		<constructor-arg value="Parent" />
	</bean>
	<bean id="keyCache" class="com.metacube.ipathshala.cache.impl.KeyCache">
		<constructor-arg value="Key" />
	</bean>

	<!-- This is test configuration for Workflow <bean id="workflowTask1" name="workflowTask1" 
		class="com.metacube.ipathshala.workflow.impl.task.TestWorkflowTask1" scope="prototype" 
		> <property name="taskName" value="task-1"></property> <property name="retryCount" 
		value="3"></property> </bean> <bean id="workflowTask2" name="workflowTask2" 
		class="com.metacube.ipathshala.workflow.impl.task.TestWorkflowTask2" scope="prototype" 
		> <property name="taskName" value="task-2"></property> <property name="retryCount" 
		value="3"></property> </bean> <bean id="workflowTask3" name="workflowTask3" 
		class="com.metacube.ipathshala.workflow.impl.task.TestWorkflowTask3" scope="prototype"> 
		<property name="taskName" value="task-3"></property> <property name="retryCount" 
		value="3"></property> <property name="actualRetryDone" value="0"></property> 
		</bean> <bean id="workflowProcessor" name="workflowProcessor" class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor" 
		scope="prototype"> <property name="workflowTasks"> <list> <ref bean="workflowTask1"/> 
		<ref bean="workflowTask2"/> <ref bean="workflowTask3"/> </list> </property> 
		</bean> -->
	<bean id="loadCacheTask" name="loadCacheTask"
		class="com.metacube.ipathshala.workflow.impl.task.LoadCacheTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="Load-Cache-Task"></property>
		<property name="retryCount" value="1"></property>
	</bean>

	<bean id="loadCacheWorkflowProcessor" name="loadCacheWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="loadCacheTask" />
			</list>
		</property>
	</bean>


	<bean id="setimporttask" name="setimporttask"
		class="com.metacube.ipathshala.workflow.impl.task.SetImportTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="set-import-task"></property>
		<property name="retryCount" value="1"></property>
	</bean>

	<bean id="setImportWorkflowProcessor" name="setImportWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="setimporttask" />
			</list>
		</property>
	</bean>

	<bean id="valueimporttask" name="valueimporttask"
		class="com.metacube.ipathshala.workflow.impl.task.ValueImportTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="value-import-task"></property>
		<property name="retryCount" value="1"></property>
	</bean>

	<bean id="valueImportWorkflowProcessor" name="valueImportWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="valueimporttask" />
			</list>
		</property>
	</bean>

	<bean id="datauploadtask" name="datauploadtask"
		class="com.metacube.ipathshala.workflow.impl.task.DataUploadTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="data-upload-task"></property>
		<property name="retryCount" value="1"></property>
	</bean>

	<bean id="dataImportWorkflowProcessor" name="dataImportWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="datauploadtask" />
			</list>
		</property>
	</bean>









	<bean id="jaxbEntityPackageConfig" class="com.metacube.ipathshala.core.JAXBEntityPackageConfig"
		lazy-init="true">
		<property name="entityTypePackageMap">
			<map>
				<entry key="SET">
					<value>com.metacube.ipathshala.core.jaxb.set</value>
				</entry>
				<entry key="VALUE">
					<value>com.metacube.ipathshala.core.jaxb.value</value>
				</entry>
			</map>
		</property>
	</bean>

	<bean id="entityWorkflowConfig" class="com.metacube.ipathshala.core.ImportEntityWorkflowConfig"
		lazy-init="true">
		<property name="entityTypeWorkflowNameMap">
			<map>
				<entry key="SET">
					<value>setImportWorkflowProcessor</value>
				</entry>
				<entry key="VALUE">
					<value>valueImportWorkflowProcessor</value>
				</entry>
				<entry key="DATA">
					<value>dataImportWorkflowProcessor</value>
				</entry>
			</map>
		</property>
	</bean>


	<!--<bean id="multipartResolver" class="org.gmr.web.multipart.GMultipartResolver"> 
		<property name="maxUploadSize" value="1048576" /> </bean> -->

	<bean id="multipartResolver" class="is.hax.spring.web.multipart.StreamingMultipartResolver">
		<property name="maxUploadSize" value="5024000" />
	</bean>

	<!-- <bean id="SMSService" class="com.metacube.ipathshala.service.SMSService"> 
		<property name="sender" ref="smsSender" /> </bean> <bean id="smsSender" class="com.metacube.ipathshala.service.sms.impl.SMSSenderSMSLaneImpl" 
		init-method="init"> <property name="user" value="${sms.sender.user}" /> <property 
		name="password" value="${sms.sender.passwd}" /> <property name="senderID" 
		value="${sms.sender.senderid}" /> <property name="flashInput" value="${sms.sender.flashInput}" 
		/> </bean> -->

	<bean id="bulkContactDeleteTask" name="bulkContactDeleteTask"
		class="com.metacube.ipathshala.workflow.impl.task.BulkContactDeleteTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="Bulk-Contact-Delete-Task"></property>
		<property name="retryCount" value="3"></property>
	</bean>
	<bean id="bulkdeleteContactWorkflowProcessor" name="bulkdeleteContactWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="bulkContactDeleteTask" />
			</list>
		</property>
	</bean>

	<bean id="addContactForAllDomainUsersTask" name="addContactForAllDomainUsersTask"
		class="com.metacube.ipathshala.workflow.impl.task.AddContactForAllDomainUsersTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="Add-ContactForAllDomainUsers-Task"></property>
		<property name="retryCount" value="3"></property>
	</bean>
	<bean id="addContactForAllDomainUsersProcessor" name="addContactForAllDomainUsersProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="addContactForAllDomainUsersTask" />
			</list>
		</property>
	</bean>


<bean id="contactImportTask" name="contactImportTask"
		class="com.metacube.ipathshala.workflow.impl.task.ContactImportTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="Contact-Import"></property>
		<property name="retryCount" value="3"></property>
	</bean>
	
	<bean id="contactImportWorkflowProcessor" name="contactImportWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="contactImportTask" />
			</list>
		</property>
	</bean>






	<bean id="addGroupToAllContactsForDomainTask" name="addGroupToAllContactsForDomainTask"
		class="com.metacube.ipathshala.workflow.impl.task.AddGroupToAllContactsForDomainTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="Add-ContactForAllDomainUsers-Task"></property>
		<property name="retryCount" value="3"></property>
	</bean>
	<bean id="addGroupToAllContactForDomainProcessor" name="addGroupToAllContactForDomainProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="addGroupToAllContactsForDomainTask" />
			</list>
		</property>
	</bean>



	<bean id="syncUserContactsTask" name="syncUserContactsTask"
		class="com.metacube.ipathshala.workflow.impl.task.SyncUserContactsTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="Sync-UserContacts-Task"></property>
		<property name="retryCount" value="3"></property>
	</bean>
	<bean id="syncUserContactsWorkflowProcessor" name="syncUserContactsWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="syncUserContactsTask" />
			</list>
		</property>
	</bean>
	

	<bean id="bulkContactDuplicateTask" name="bulkContactDuplicateTask"
		class="com.metacube.ipathshala.workflow.impl.task.BulkContactDuplicateTask"
		scope="prototype" lazy-init="true">
		<property name="taskName" value="Bulk-Contact-Duplicate-Task"></property>
		<property name="retryCount" value="3"></property>
	</bean>
	<bean id="bulkduplicateContactWorkflowProcessor" name="bulkduplicateContactWorkflowProcessor"
		class="com.metacube.ipathshala.workflow.impl.processor.WorkflowSequenceProcessor"
		scope="prototype" lazy-init="true">
		<property name="workflowTasks">
			<list>
				<ref bean="bulkContactDuplicateTask" />
			</list>
		</property>
	</bean>

	<!-- Spring managed filter -->
	<bean name="authorisationFilter" class="com.metacube.ipathshala.filter.AuthorisationFilter">
	</bean>
	<bean name="authenticationFilter" class="com.metacube.ipathshala.filter.AuthenticationFilter">
	</bean>
	<bean name="initializationFilter" class="com.metacube.ipathshala.filter.InitializationFilter">
	</bean>

</beans>